<?xml version="1.0" encoding="UTF-8"?>
<component type="desktop-application">
  <id>page.codeberg.alexispurslane.kissg</id>
  <launchable type="desktop-id">page.codeberg.alexispurslane.kissg.desktop</launchable>
  <name>KissG</name>
  <summary>The KISS static site generator</summary>
  
  <metadata_license>CC-BY-SA-4.0</metadata_license>
  <project_license>GPL-3.0-or-later</project_license>

  <developer id="page.codeberg.alexispurslane.alexispurslane">
    <name>Alexis Purslane</name>
  </developer>

  <update_contact>alexispurslane@pm.me</update_contact>

  <url type="homepage">https://codeberg.org/alexispurslane/kissg</url>
  <url type="bugtracker">https://codeberg.org/alexispurslane/kissg/issues/</url>
  
  <supports>
    <control>pointing</control>
    <control>keyboard</control>
    <control>touch</control>
  </supports>

  <content_rating type="oars-1.1" />
  
  <description>
    <p>
      This application provides a clean libadwaita GUI for generating simple static HTML pages from a provided template. Simply supply an HTML template with placeholder variable surrounded in double curly brackets, including the special "content" placeholder variable, and the GUI will present you with a simple series of text boxes to supply values to replace the placeholder variable in the template, and a file to replace the "content" placeholder with the contents of. Fill this out, hit publish, and KissG will do its thing!
    </p>
    <p>
      This little tool is intended to bring some of the power of static site generators to those who are intimidated by the prospect of having to install a programming language runtime, use its package manager, and wrangle the command line, but still want independence from service-as-a-software-substitute online tools.
    </p>
  </description>
  
  <screenshots>
    <screenshot type="default">
      <image>https://codeberg.org/alexispurslane/kissg/raw/branch/main/kissg-screenshot.png</image>
      <caption>The main (and only) screen of KissG, showing the user interface elements descripted in the description.</caption>
    </screenshot>
  </screenshots>

  <releases>
    <release version="1.2.0" date="2024-07-10">
      <url type="details">https://codeberg.org/alexispurslane/kissg/releases/tag/v1.2.0</url>
      <description>
        <p>Release description</p>
        <ul>
          <li>Switch to FileChooserNative so that we can access files through XDG Portals instead of needing filesystem access granted directly</li>
          <li>Remove all extraneous permissions</li>
          <li>Fix the codeberg url part of the application ID.</li>
        </ul>
      </description>
    </release>
    <release version="1.1.1" date="2024-07-10">
      <url type="details">https://codeberg.org/alexispurslane/kissg/releases/tag/v1.1.1</url>
      <description>
        <p>Release description</p>
        <ul>
          <li>Switch to providing a dependency manifest generated from Cargo.lock instead of using network access for getting dependencies during the Flatpak building process.</li>
        </ul>
      </description>
    </release>
    <release version="1.1.0" date="2024-07-10">
      <url type="details">https://codeberg.org/alexispurslane/kissg/releases/tag/v1.1.0</url>
      <description>
        <p>Release description</p>
        <ul>
          <li>Correct the initial sandbox permissions so it will work out of the gate.</li>
          <li>Switch to flathub-compliant (and more sensical) application id.</li>
        </ul>
      </description>
    </release>
    <release version="1.0.0" date="2024-07-09">
      <url type="details">https://codeberg.org/alexispurslane/kissg/releases/tag/v1.0.0</url>
      <description>
        <p>Release description</p>
        <ul>
          <li>Allow loading templates and generating text fields for the placeholder variables</li>
          <li>Allow selecting a place to save the resulting page</li>
          <li>Allow selecting a content file</li>
          <li>Substitute the contents of the content fields and the contents of the content file into the correct locations in the file and outputting HTML, then offering to automatically view that file.</li>
        </ul>
      </description>
    </release>
  </releases>
</component>
